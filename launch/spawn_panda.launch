<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="load_gazebo" default="true" /> <!-- wtf -->
    <arg name="load_gripper" default="false" />
    
    <arg name="robot" default="panda" />
    <arg name="initX" default="0" />
    <arg name="initY" default="0" />
    
    <rosparam command="load" file="$(find panda_gazebo)/config/robot_details.yaml" />
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find franka_panda_description)/robots/panda_arm_hand.urdf.xacro load_gripper:=$(arg load_gripper) load_gazebo:=$(arg load_gazebo) use_gazebo_control:=true" />

    <param name="/arm/root_name" value="panda_link0" />
    <param if="$(arg load_gripper)" name="/arm/tip_name" value="panda_hand" />
    <param unless="$(arg load_gripper)" name="/arm/tip_name" value="panda_link8" />
    <param if="$(arg load_gripper)" name="/franka_gripper/robot_ip" value="sim" />
    <param if="$(arg load_gripper)" name="/arm/gravity_tip_name" value="panda_hand" />
    <param unless="$(arg load_gripper)" name="/arm/gravity_tip_name" value="panda_link8" />

    <!-- Spawn urdf of the robot -->
    <node name="robot_description" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot)  -x $(arg initX) -y $(arg initY)" />

    <!-- create a tf with base frame as 'base' (to match aml_robot) -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_link0" args="0 0 0 0 0 0 1 base panda_link0 100" />
    <node pkg="tf" type="static_transform_publisher" name="world_to_base" args="0 0 0 0 0 0 1 world base 100" />

    <!-- launch controllers -->
    <rosparam command="load" file="$(find reconcycle_simulation)/conf/sim_ros_controllers.yaml" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_arm_controller"/>
    
</launch>
