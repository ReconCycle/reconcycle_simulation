<?xml version="1.0" encoding="utf-8"?>
<launch>

  <arg name="robot" default="panda" />
  <arg name="initX" default="0" />
  <arg name="initY" default="0" />

  <arg name="load_gripper" default="true" />
  <arg name="controller" default="none" doc="none, reconcycle_joint_controller, reconcycle_cart_controller, reconcycle_cart_controller_tum, joint_trajectory_controller" />

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find franka_panda_description)/robots/panda_arm_hand.urdf.xacro
    load_gripper:=$(arg load_gripper)
    load_gazebo:=true
    use_gazebo_control:=true" />  <!-- load_gazebo adds extra parameters from urdf for simulation, use_gazebo_control loads standard ros_control hardware interface -->

  <!-- Spawn urdf of the robot -->
  <node name="load_model" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot) -x $(arg initX) -y $(arg initY)" />

  <!-- launch controller -->
  <include if="$(eval arg('controller') == 'reconcycle_joint_controller')" file="$(find panda_action_servers)/launch/sim_joint_impedance.launch" />
  <include if="$(eval arg('controller') == 'reconcycle_cart_controller')" file="$(find panda_action_servers)/launch/sim_cart_impedance.launch" />
  <include if="$(eval arg('controller') == 'reconcycle_cart_controller_tum')" file="$(find panda_action_servers)/launch/sim_cart_impedance_tum.launch" />
  <include if="$(eval arg('controller') == 'joint_trajectory_controller')" file="$(find panda_action_servers)/launch/sim_joint_trajectory.launch" />

  <!-- state publisher-->
  <arg name="needs_prefix" value="$(eval arg('robot') != 'panda')" />
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param if="$(arg needs_prefix)" name="tf_prefix" value="$(arg robot)" />
  </node>

</launch>
